title: Présentation résumée de YamlDoc
modified: 2020-02-18
abstract: |
  YamlDoc
  -------
  YamlDoc est un système de gestion documentaire fondé sur :
  
    1. l'organisation de documents correspondants principalement à des fichiers texte
      structurés au **[format Yaml](?ypath=/yaml)**,
    2. l'utilisation, quand cela est adapté, pour les champs d'une **[sémantique bien connue](?ypath=/semantic)**
      (DublinCore, DCAT, Skos, Schema.org, GeoJSON, ...), conformément aux principes
      du [Web des données](https://fr.wikipedia.org/wiki/Web_des_donn%C3%A9es),
    3. la définition de [classes de documents](?ypath=/ydclass) permettant,
      d'une part, de spécifier le contenu des documents par un [schéma JSON](https://json-schema.org/)
      et, d'autre part, d'associer à un document un comportement défini par une classe Php,
    4. la possibilité de formatter les textes contenus dans un champ du fichier Yaml
      en utilisant le **[langage Markdown](?ypath=/markdown)**,
    5. la visualisation des documents et fragments au moyen d'un [visualiseur Web](?ypath=/viewer)
      extensible grâce aux classes de documents,
    6. un mécanisme de [requête simple (ypath)](?ypath=/ypath) dans les documents,
    7. l'[identification](?ypath=/id) par un URI de chaque document et chacun de ses fragments,
      dont le déréférencement expose son contenu en JSON ou en JSON-LD,
    8. la possibilité d'effectuer des [recherches plein texte](?ypath=/textSearch) dans les documents,
    9. l'[organisation d'espaces documentaires partagés chacun sous la forme d'une archive Git](?ypath=/git),
      pouvant ainsi utiliser soit [Github](https://github.com/benoitdavidfr/yamldocs),
      soit une archive Git privée,
    10. la définition de [requêtes sur les documents](?ypath=/query) en Php,
      
  YamlDoc est notamment étendu pour permettre :
    
    - l'[accès aux données géographiques et la définition de cartes Leaflet](?doc=geodata),
    - l'[exploitation de catalogue de données géographiques](?doc=geocats),
    - l'utilisation de thésaurus Skos comme [EuroVoc](?doc=eurovoc),
    - l'[utilisation d'API de l'INSEE](?doc=insee).
    
  [Idées pour la suite](?ypath=/next).
    
yaml: |
  ### Fondé sur le format Yaml
  Le format [Yaml](https://fr.wikipedia.org/wiki/YAML) permet de structurer des documents ou des données
  par combinaison de listes, tableaux associatifs et données scalaires.
  Similaire au format JSON, il a l'avantage d'être très **lisible** pour nous les humains
  tout en étant facile à comprendre pour les machines.  
  Il permet de structurer aussi bien des documents composés principalement de textes comme le présent document,
  que des bases de données comme par exemple la [base historique des communes](?doc=geohisto/communes),
  des structures de graphe comme le [thésaurus EuroVoc](?doc=eurovoc)
  ou des documents strcturés complexes comme le
  [modèle de données Inspire](?doc=isnpire-datamodel) déduit du règlement interopérabilité.  
  Enfin, l'édition de documents Yaml est fournie par divers éditeurs de texte comme
  [Notepad++ sous Windows](https://notepad-plus-plus.org/fr/) ou [TextMate sur Mac](https://macromates.com/).
  
semantic: |
  ### Sémantique bien connue
  Lorsque cela est adapté, la sémantique des champs des tableaux associatifs Yaml respecte les standards suivants :
    
    - le [standard Dublin Core](https://fr.wikipedia.org/wiki/Dublin_Core) pour décrire les métadonnées
      d'un document ; ainsi il est recommandé d'utiliser des champs Dublin Core (comme title, subject, description,
      date, ...) pour définir les métadonnées de chaque document
      ([synthèse des principaux champs ici](?doc=dublincore&ypath=/abstract)) ;
    - le [standard W3C DCAT](https://www.w3.org/TR/vocab-dcat-2/) pour décrire les catalogues de jeux de données,
    - le [standard W3C SKOS](https://fr.wikipedia.org/wiki/Simple_Knowledge_Organization_System)
      ([résumé ici](?doc=skos)) encodé en Yaml pour représenter des thésaurus
      comme le [thésaurus EuroVoc](?doc=eurovoc) ou le [lexique topographique](?doc=topovoc) de l'AFT ;
    - le [standard Schema.org](https://fr.wikipedia.org/wiki/Schema.org) pour structurer
      des bases de données, telles que par exemple des listes d'organismes en utilisant le
      [type Organization](https://schema.org/Organization),
    - le [standard IETF GeoJSON](https://tools.ietf.org/html/rfc7946) pour décrire des bases de données
      géographiques vecteur, [plus de détails ici](?doc=geodata).

ydclass: |
  ### Définition de classes de documents
  Une classe de documents correspond à:
    
    - un [schéma JSON](https://json-schema.org/),
    - une classe d'objets Php définissant:
      - des méthodes de consultation interactive du document,
      - une API REST de consultation en machine to machine,
      - une API Php d'utilisation du document en interne à YamlDoc.
      
  Par exemple la classe YamlSkos définit des documents qui correspondent à un thésaurus décrit en SKOS.
  Ainsi, le schéma JSON précise coment le thésaurus doit être structuré en Yaml,
  et la classe Php permet :
    
    - d'afficher en HTML le thésaurus ou une de ses parties (Concept, micro-thésaurus),
    - d'exposer une API REST de consultation du thésaurus ou d'une de ses parties,
    - de fournir des méthodes Php pour utiliser le thésaurus.
  
  La gestion des classes est développée dans [ce document](?doc=yamldoc/ydclasses).

markdown: |
  ### Markdown
  Le [langage Markdown](https://fr.wikipedia.org/wiki/Markdown) est utilisé pour formatter des textes (titres, gras,
  italique, liste de puces, liens URL, ...) ;
  son utilisation est [illustrée ici](?doc=markdown).
  Les différentes parties du présent document constituent un autre exemple d'utilisation du Markdown.
  
viewer: |
  ### Visualiseur
  Un visualiseur en mode web permet de visualiser les documents et de naviguer entre eux.
  Il permet de vérifier qu'un document est conforme à son schéma.
  Il offre aussi une fonctionnalité limitée de modification.  
  Un mode de visualisation par défaut est défini mais le visualisateur peut être étendu pour s'adapter aux
  différentes structures de document. Par exemples:
    
    - l'extension YamlData permet de visualiser le contenu d'une base de données,
    - l'extension YamlSkos permet de naviguer facilement au sein d'un thésaurus Skos,
    - l'extension DataModel permet de naviguer facilement au sein d'un modèle de données.
    
  Le visualisateur de l'espace public est accessible sous
  [http://georef.eu/yamldoc/?doc=index](http://georef.eu/yamldoc/?doc=index).  
  Son code source est disponible sur: [Github](https://github.com/benoitdavidfr/yamldoc).
  
ypath: |
  ### Ypath: mécanisme de requêtes simples
  La fourniture d'une chaine de caractères particulière (appelée Ypath), permet de sélectionner
  une partie d'un document ou d'une base de données.
  Son utilisation est illustrée par les exemples ci-dessous :
    
    - dans le présent document, la sélection de la partie *yaml* du document s'effectue en entrant
      dans le champ de saisie en dessous du menu la chaine `/yaml`,
    - il est aussi possible d'afficher ce même champ en suivant
      l'url [`?doc=yamldoc&ypath=/yaml`](?doc=yamldoc&ypath=/yaml),
    - dans un thésaurus comme le [lexique topographique](?doc=topovoc),
      on peut référencer le micro-thésaurus `lexiquecadastre`
      par la chaine [`/schemes/lexiquecadastre`](?doc=topovoc&ypath=/schemes/lexiquecadastre)
      ou le terme `matrice_cadastrale`
      par la chaine [`/concepts/matrice_cadastrale`](?doc=topovoc&ypath=/concepts/matrice_cadastrale),
    - dans la table des départements :
      - la sélection de l'enregistrement ayant pour *name* `Guadeloupe` s'effectue
        par la chaine [`/data/name=Guadeloupe`](?doc=geohisto/departements&ypath=/data/name=Guadeloupe)
      - la sélection des enregistrements ayant pour *insee_code* `04` s'effectue
        par la chaine [`/data/insee_code=04`](?doc=geohisto/departements&ypath=/data/insee_code=04)
      - la projection sur les champs *insee_code*, *name* et *successors* s'effectue par la 
        chaine [`/data/insee_code,name,successors`](?doc=geohisto/departements&ypath=/data/insee_code,name,successors)

id: |
  ### Identification des documents et de leurs fragments et leur exposition en JSON
  Chaque document correspond à un URI de la forme `http://id.georef.eu/{path}` où `{path}` est le chemin du document.  
  Le déréférencement de cet URI expose le document en JSON.
  
  De même chaque fragment d'un document correspond à un URI de la forme `http://id.georef.eu/{path}{ypath}`,
  où `{ypath}` est le chemin du fragment dans le document,
  qui peut être déréférencé pour exposer le fragment en JSON.

  Exemples:
    
    - Le présent document : [`http://id.georef.eu/yamldoc`](http://id.georef.eu/yamldoc)
    - Le présent fragment : [`http://id.georef.eu/yamldoc/id`](http://id.georef.eu/yamldoc/id)
    - Codification des langues selon la norme ISO 639 : [`http://id.georef.eu/iso639`](http://id.georef.eu/iso639)
    - Définition du code `fre` selon la norme ISO 639 :
      [`http://id.georef.eu/iso639/concepts/fre`](http://id.georef.eu/iso639/concepts/fre)

textSearch: |
  ### Recherche plein texte
  En tapant un mot ou plusieurs dans le champ de saisie, une recherche plein texte est effectuée dans les documents.
  Si la chaine ne commence pas par un '/' la chaine est interprétée comme une liste de mots.  
  Par exemple, en tapant le mot `bourgogne` on trouve les fragments d'EuroVoc et de geohisto qui
  contiennent ce mot.  
  On notera que l'indexation est effectuée par fragment, c'est à dire chaine ou texte à l'intérieur du document,
  et non document par document.
  C'est un point important par exemple pour indexer des bases de données.  
  Ainsi, par exemple, lors de la recherche du mot `bourgogne`, un des résultats est le fragment d'Eurovoc
  correspondant au ypath `/concepts/5032/historyNote/fr/0` ; il s'agit donc de la première note historique
  en français associée au concept 5032. Il est simple de remonter ici au concept en modifiant le ypath.
  
  Différentes possibilités de recherche sont proposées :
    
    - en indiquant plusieurs mots on cherche les fragments contenant au moins un des mots,
      par exemple la chaine `Franche Comté` permet de trouver les fragments contenant soit Franche soit Comté,
    - en faisant précéder les mots par un + on cherche les fragments contenant tous les mots,
      par exemple la chaine `+Franche +Comté` permet de trouver les fragments contenant à la fois Franche et Comté,
    - en faisant précéder un mot par un - on exclue les fragments contenant ce mot,
      par exemple la chaine `+Franche -Comté` permet de trouver les fragments contenant Franche mais pas Comté,
    - en faisant suivre un mot par * on cherche les mots commencant par le mot,
      par exemple la chaine `geograph*` permet de trouver géographie et geography.
    
  Il est aussi possible de restreindre la recherche à un document, voire à certains fragments,
  par exemple on peut rechercher le mot géographie uniquement dans les concepts d'Eurovoc
  en indiquant dans le champ key `eurovoc/concepts`.
  
git: |
  ### Organisation d'espaces documentaires partagés chacun sous la forme d'une archive Git
  Les documents sont partitionnés en différents espaces documentaires
  avec pour chacun des accès en lecture et/ou en écriture pour certains utilisateurs.  
  Chaque espace documentaire correspond à une [archive Git](https://fr.wikipedia.org/wiki/Git)
  qui peut ainsi être partagée.
  Outre l'utilisation en mode web,
  les différents utilisateurs d'un espace peuvent ainsi modifier les documents sur leur poste local
  au moyen d'un éditeur de texte.
  Le logiciel Git est utilisé pour assurer la synchronisation entre les différentes copies. 
  
  Dans un premier temps, seuls 2 espaces sont définis: un espace public et un espace privé.  
  L'archive Git de l'espace public est accessible à l'URL:
  [https://github.com/benoitdavidfr/yamldocs](https://github.com/benoitdavidfr/yamldocs) et
  le visualisateur de cet espace est accessible sous
  [http://georef.eu/yamldoc/?doc=index](http://georef.eu/yamldoc/?doc=index).  
  
  L'utilisation du mécanisme des branches de git permet d'isoler les modifications de différents utilisateurs ;
  cette fonctionnalité potentielle n'a pas encore été mise en oeuvre.

query: |
  ### Requêtes en Php
  Les documents correspondant à des bases de données peuvent facilement être exploités par des scripts Php
  qui effectuent des requêtes dans les données.
  Ces requêtes sont appelées comme des documents.  
  Par exemples :
    
    - le document [jregdept](?doc=jregdept) réalise une jointure entre les régions actuelles et les départements
      actuels et renvoie la liste des régions actuelles avec pour chacune la liste de ses départements
      ([consulter le code source Php de la requête](?action=showPhpSrc&amp;doc=jregdept)),
    - il est possible de sélectionner une partie du document jregdept en indiquant un ypath,
      ainsi [ypath=`/data/insee_code=32/depts`](?doc=jregdept&ypath=/data/insee_code=32/depts)
      sélectionne la liste des départements de la région ayant 32 comme insee_code.
    - autre exemple, le document [cregions](?doc=cregions) sélectionne les régions actuelles
      ([consulter le code source Php de la requête](?action=showPhpSrc&amp;doc=cregions)).
      
  Du point de vue implémentation, un document requête est un script Php qui renvoie un array Php 
  à partir duquel sera créé un objet Yamldoc par exemple pour afficher le résultat de la requête.

next: |
  ### Réflexions pour la suite
  Reconstruire YamlDoc fondé sur 3 mécanismes :
    
    - YRdf - stockage d'un graphe RDF exposé en JSON-LD
      dans l'[hypothèse du monde ouvert](https://fr.wikipedia.org/wiki/Hypoth%C3%A8se_du_monde_ouvert).  
      Chaque ressource est identifiée par un URI et est exposée en JSON-LD.  
      Faut-il exposer le document en JSON-LD ?
    - YDB - stockage d'un dictionnaire de collections homogènes d'enregistrements
      chacun étant censé respecter le schéma JSON défini au niveau de la collection.  
      Logique de base de données et donc
      [hypothèse du monde clos](https://fr.wikipedia.org/wiki/Hypoth%C3%A8se_du_monde_clos).  
      Chaque enregistrement est identifié par un URI et est exposé en JSON.
    - accès aux API en mode RESTfull
      
  Peut-on gérer simplement la structure Skos comme un cas particulier de Rdf ?
  
  #### JSON-LD vs. JSON Schema
  In `https://lists.w3.org/Archives/Public/public-linked-json/2014Oct/0010.html`  
  <markus.lanthaler@gmx.net> wrote:
    
  > They serve different purposes. The short version is:
  > 
  >   - JSON-LD give JSON messages a well-defined meaning by mapping most things to IRIs.
  >   - JSON Schema describes the syntactic structure of a JSON document.
  > 
  > Both work with JSON so you can use them together.
  

