title: le protocole HTML
source:
  - https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol
  - https://en.wikipedia.org/wiki/List_of_HTTP_status_codes
  - https://en.wikipedia.org/wiki/List_of_HTTP_header_fields
verbs:
  GET: |
    The GET method requests a representation of the specified resource. Requests using GET should only retrieve data and
    should have no other effect. (This is also true of some other HTTP methods.)
    The W3C has published guidance principles on this distinction, saying, "Web application design should be informed
    by the above principles, but also by the relevant limitations."
  HEAD: |
    The HEAD method asks for a response identical to that of a GET request, but without the response body. This is useful
    for retrieving meta-information written in response headers, without having to transport the entire content.
  POST: |
    The POST method requests that the server accept the entity enclosed in the request as a new subordinate of the web
    resource identified by the URI. The data POSTed might be, for example, an annotation for existing resources;
    a message for a bulletin board, newsgroup, mailing list, or comment thread; a block of data that is the result of
    submitting a web form to a data-handling process; or an item to add to a database.
  PUT: |
    The PUT method requests that the enclosed entity be stored under the supplied URI. If the URI refers to an already
    existing resource, it is modified; if the URI does not point to an existing resource, then the server can create the
    resource with that URI.
  DELETE: |
    The DELETE method deletes the specified resource.
  TRACE:
    The TRACE method echoes the received request so that a client can see what (if any) changes or additions have been
    made by intermediate servers.
  OPTIONS:
    The OPTIONS method returns the HTTP methods that the server supports for the specified URL. This can be used to check
    the functionality of a web server by requesting '*' instead of a specific resource.
  CONNECT:
    The CONNECT method converts the request connection to a transparent TCP/IP tunnel, usually to facilitate
    SSL-encrypted communication (HTTPS) through an unencrypted HTTP proxy.
  PATCH:
    The PATCH method applies partial modifications to a resource.
statusCodes:
  Informational:
    100: Continue
    101: Switching Protocols
    102: Processing (WebDAV; RFC 2518)
  Successful:
    200: OK
    201: Created
    202: Accepted
    203: Non-Authoritative Information (since HTTP/1.1)
    204: No Content
    205: Reset Content
    206: Partial Content (RFC 7233)
    207: Multi-Status (WebDAV; RFC 4918)
    208: Already Reported (WebDAV; RFC 5842)
    226: IM Used (RFC 3229)
  Redirection:
    300: Multiple Choices
    301: Moved Permanently
    302: Found (Previously "Moved temporarily")
    303: See Other (since HTTP/1.1)
    304: Not Modified (RFC 7232)
    305: Use Proxy (since HTTP/1.1)
    306: Switch Proxy
    307: Temporary Redirect (since HTTP/1.1)
    308: Permanent Redirect (RFC 7538)
  ClientError:
    400: Bad Request
    401: Unauthorized (RFC 7235)
    402: Payment Required
    403: Forbidden
    404: Not Found
    405: Method Not Allowed
    406: Not Acceptable
    407: Proxy Authentication Required (RFC 7235)
    408: Request Timeout
    409: Conflict
    410: Gone
    411 Length Required
    412 Precondition Failed (RFC 7232)
    413 Payload Too Large (RFC 7231)
    414 URI Too Long (RFC 7231)
    415 Unsupported Media Type
    416 Range Not Satisfiable (RFC 7233)
    417 Expectation Failed
    418 I'm a teapot (RFC 2324, RFC 7168)
    421 Misdirected Request (RFC 7540)
    422 Unprocessable Entity (WebDAV; RFC 4918)
    423 Locked (WebDAV; RFC 4918)
    424 Failed Dependency (WebDAV; RFC 4918)
    426 Upgrade Required
    428 Precondition Required (RFC 6585)
    429 Too Many Requests (RFC 6585)
    431 Request Header Fields Too Large (RFC 6585)
    451 Unavailable For Legal Reasons (RFC 7725)
  ServerError:
    500 Internal Server Error
    501 Not Implemented
    502 Bad Gateway
    503 Service Unavailable
    504 Gateway Timeout
    505 HTTP Version Not Supported
    506 Variant Also Negotiates (RFC 2295)
    507 Insufficient Storage (WebDAV; RFC 4918)
    508 Loop Detected (WebDAV; RFC 5842)
    510 Not Extended (RFC 2774)
    511 Network Authentication Required (RFC 6585)

    
  