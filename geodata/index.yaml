title: Présentation de l'accès aux données géographiques avec YamlDoc
journal:
  '2018-08-15':
    - nouvelle vesrion fusionnant dans VectorDataset ShapeDataset, WfsLayers et MultiScaleDataset
  '2018-08-10':
    - revisite du document après avoir implanté GeoData, WfsServer, MultiScaleGeoData et Map
  '2018-08-05':
    - première réflexions inspirée de bdv.geoapi.fr avec version minimum de GeoData et Map fonctionne avec Route500
description: |
  ## Accès aux données géographiques
  YamlDoc définit des mécanismes d'accès aux données géographiques au travers de types de documents
  correspondant à des séries de données géographiques (SD),
  en distinguant des [SD vecteur](?ypath=/vector), des [SD image](?ypath=/image)
  et des [SD en consultation](?ypath=/view).
  Ces mécanismes sont conçus afin que les SD puissent facilement être affichées
  avec la [bibliothèque Leaflet](https://leafletjs.com/) 
  et sont utilisables avec des logiciels comme [umap](https://umap.openstreetmap.fr/fr/) qui respecte
  les mêmes standards d'interopérabilité :
    
    - les SD vecteur au moyen du plugin [uGeoJson](https://github.com/BenjaminVadant/leaflet-ugeojson),
    - les SD en consultation au moyen de la classe [TileLayer](https://leafletjs.com/reference-1.3.2.html#tilelayer).
    
  En outre, des [documents carte](?ypath=/map) permettent d'afficher ces SD, ou certaines de leurs couches,
  dans des cartes Leaflet.
  
vector: |
  ## SD vecteur
  Une SD vecteur (VectorDataset) est composée de couches vecteur,
  chacune correspondant à une FeatureCollection [GeoJSON](https://tools.ietf.org/html/rfc7946) ;
  chaque couche est donc composée d'objets vecteur, les Feature GeoJSON,
  sur lesquels des critères de sélection peuvent être appliqués.
  
  ### Affichage multi-échelles
  Les SD vecteur sont conçues pour permettre un [affichage multi-échelles](?doc=geodata/multi-echelles) des données.  
  Le tableau ci-dessous indique les produits utilisés en fonction du zoom.
  
  | Niveaux || Echelles (dénom.)| Produit utilisé |
  | :------ || :------------: | :-------------- |
  |  0 - 3  || > 70 M | [Natural Earth 110M](?doc=geodata/ne_110m) |
  |  4 - 8  || 35 M - 2 M | [Natural Earth 10M](?doc=geodata/ne_10m) |
  |  9 - 11 || 1 M - 273 k | [Route500](?doc=geodata/route500) |
  | 12 - 13 || 136 k - 68 k | [BD Carto](?doc=geodata/bdcarto) |
  | 14 - 18 || 34 k - 2 k | [BD Topo](?doc=geodata/bdtopo) |
  
  Les couches suivantes sont définies dans plusieurs SD et peuvent être visualisées dans différents produits :
  <table border=1><th>NE 110M</th><th>NE 10M</th>
    <th>Route500</th><th>BD Carto</th>
    <th>BD Topo</th>
    <th>Commentaire</th>
  <tr><td colspan=2 align=center>coastline</td>
    <td colspan=2 align=center>coastline</td>
    <td>coastline</td>
    <td>trait de côte</td></tr>
  <tr><td colspan=2 align=center>coastAdminBoundaryLines</td>
    <td colspan=2 align=center>limite_administrative</td>
    <td></td>
    <td>fusion du trait de côte et de limites administratives</td></tr>
  <tr><td align=center>rivers_lake_centerlines</td><td align=center>rivers_lake_centerlines_scale_rank</td>
    <td colspan=2 align=center>troncon_hydrographique</td>
    <td>troncon_cours_eau</td>
    <td>axes des rivières et des lacs</td></tr>
  <tr><td></td><td align=center>roads</td>
    <td colspan=2 align=center>troncon_route</td>
    <td>route</td>
    <td>routes</td></tr>
  <tr><td></td><td align=center>railroads</td>
    <td colspan=2 align=center>troncon_voie_ferree</td>
    <td>troncon_voie_ferree</td>
    <td>voies ferrées</td></tr>
  <tr><td></td><td align=center>urban_areas</td>
    <td align=center>zone_batie</td><td align=center>zone_batie_activites</td>
    <td></td>
    <td>zones urbanisées</td></tr>

  </table>
  La [SD multi-échelles](?doc=geodata/mscale) définie ces couches appellant le produit adapté au zoom d'affichage.  
  De plus, chaque SD, comme par exemple la BD CARTO, peut intégrer des couches aux échelles plus petites.
     
  Les autres SD vecteur définies sont :
  
    - [Admin Express](?doc=geodata/adminexpress)
    - [BD ADRESSE](?doc=geodata/bdadresse)
    - [BD PARCELLAIRE VECTEUR](?doc=geodata/bdparcellaire)
  
  ### API exposée
  Un document décrivant une SD vecteur, d'une part, peut s'afficher et, d'autre part, expose une API
  constituée des 6 points d'entrée suivants :
    
    1. {docid} : description de la SD en JSON (ou en Yaml), y compris la liste de ses couches
      ([exemple de Route500](/yamldoc/id.php/geodata/route500),
      [en Yaml](/yamldoc/id.php/geodata/route500?format=yaml)),
    2. {docid}/{lyrname} : description de la couche en JSON (ou en Yaml), cette URI identifie la couche
      ([exemple de la couche commune de Route500](/yamldoc/id.php/geodata/route500/commune)),
    3. {docid}/{lyrname}?{query} : requête sur la couche renvoyant un FeatureCollection GeoJSON  
      où {query} peut être:
        - bbox={lngMin},{latMin},{lngMax},{latMax}&zoom={zoom}
          ([exemple](/yamldoc/id.php/geodata/route500/commune?bbox=-2.71,47.21,2.72,47.22&zoom=10)),
        - where={critère SQL/CQL}
          ([exemple des communes dont le nom commence par
          BEAUN](/yamldoc/id.php/geodata/route500/noeud_commune?where=nom_comm%20like%20'BEAUN%')),
    4. {docid}/{lyrname}/id/{id} : renvoie l'objet d'id {id} (A FAIRE)
    5. {docid}/map : renvoie le document JSON décrivant la carte standard affichant la SD
      ([exemple de la carte Route500](/yamldoc/id.php/geodata/route500/map)),
    6. {docid}/map/display : renvoie le code HTML d'affichage de la carte standard affichant la SD
      ([exemple d'affichage de la carte Route500](/yamldoc/id.php/geodata/route500/map/display)),

  En utilisant cette API, une carte affichant une SD vecteur peut être construite
  avec le [logiciel umap](https://umap.openstreetmap.fr/fr/).
  Pour cela définir un calque en indiquant :
    
    - comme *données distantes*
      l'URL `{docid}/{lyrname}?bbox={bbox}&zoom={zoom}`,  
      par exemple: `id.php/geodata/route500/limite_administrative?bbox={bbox}&zoom={zoom}`
    - comme *format des données*: **geojson**,
    - qu'il s'agit d'un calque *dynamique* afin que les données soient requêtées à chaque fois que la vue
      de la carte change,
    - d'activer le **proxy**.

  ### Définition des couches
  Une couche vecteur peut être implantée de 4 manières différentes :
    
    1. elle peut correspondre à un fichier OGR chargé dans une table MySQL ;
      dans ce cas une première étape de chargement des fichiers en base est nécessaire ;
      des exemples sont   :
        - la [couche limite administrative de Route500](id.php/geodata/route500/limite_administrative),
        - la [couche coastline de la Natural Earth 10M](id.php/geodata/ne_10m/coastline)
    2. elle peut aussi correspondre à une couche exposée par un service WFS ;
      des exemples sont :
        - la [couche commune d'ADMIN EXPRESS](id.php/geodata/adminexpress/commune),
        - la [couche troncon_hydrographique de la BDCARTO](id.php/geodata/bdcarto/troncon_hydrographique),
        - la [couche troncon_laisse de la BDTOPO](id.php/geodata/bdtopo/troncon_laisse),
        
      Une couche OGR ou WFS peut en outre être filtrée en fonction du zoom ;
      la [couche limite administrative de Route500](id.php/geodata/route500/limite_administrative)
      en est une illustration.
      
    3. une couche peut aussi être définie par une sélection dans une des couches précédentes définie dans la même SD ;  
      Un exemple est la [couche coastline de Route 500](id.php/geodata/route500/coastline).
      
    4. une couche peut enfin être définie en fonction du zoom d'affichage et de la zone géographique
      par une des couches précédentes ;  
      Un exemple d'une telle couche est
      la [couche coastline de la SD multi-échelles](id.php/geodata/mscale/coastline) en construction.
      
  [Voir ici les spécs détaillées des documents VectorDataset](?action=version&doc=geodata&name=vectords.inc.php).
  
  Par ailleurs, pour utiliser les serveurs WFS, un type de document WfsServer est défini.
  Le [serveur WFS du Géoportail IGN](?doc=geodata/igngpwfs) en est un exemple.
  La classe VectorDataset hérite de la classe WfsServer.
      
image: |
  Les SD image sont constituées de couches d'images. (A FAIRE)
  
view: |
  Les SD d'affichage sont constituées de couches d'affichage.
  Chaque couche d'affichage correspond à un URI et interrogée avec un {x},{y},{z} renvoie une image PNG ou JPEG.
  exemple: http://igngp.geoapi.fr/tile.php
  
  Les couches de http://igngp.geoapi.fr/tile.php peuvent être utilisées dans umap comme fond de carte personnalisé.
  Par exemple `http://igngp.geoapi.fr/tile.php/cartes/{z}/{x}/{y}.jpg` comme URL pour obtenir les cartes IGN.
  
map: |
 Un document carte décrit une carte Leaflet
 ([exemple de la carte de test](?doc=geodata/testmap)).
 
 De plus, chaque SD vecteur a la capacité de générer une carte standard
 ([exemple de la carte standard de Route500](id.php/geodata/route500/map)).

 
  